<?php

/**
 * @file
 * File containing Drupal module
 */

/**
 * Implements hook_theme().
 */
function d_p_tiles_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__d_p_tiles' => [
      'base hook' => 'paragraph',
    ],
    'field__paragraph__field_d_image__d_p_tiles' => [
      'base hook' => 'field',
    ]
  ];
}

/**
 * Implements hook_preprocess_paragraph().
 */
function d_p_tiles_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $bundle = $paragraph->bundle();

  switch ($bundle) {
    case 'd_p_tiles':
      $variables['#attached']['library'][] = 'd_p_tiles/masonry';
      $variables['#attached']['library'][] = 'd_p_tiles/d_p_tiles';
      break;
  }

}

/**
 * Implements hook_preprocess_fieldK().
 */
function d_p_tiles_preprocess_field(&$variables) {
  if ($variables['element']['#entity_type'] == 'paragraph') {
    if ($variables['element']['#bundle'] == 'd_p_tiles') {
      // Add container class to title and description.
      if (in_array($variables['field_name'], [ 'field_d_main_title', 'field_d_long_text' ])) {
        $variables['attributes']['class'][] = 'container';
      }
    }
  }
}

/**
 * Implements hook_preprocess_colorbox_formatter().
 */
function d_p_tiles_preprocess_colorbox_formatter(&$variables) {
  // Add standard size to each field.
  $variables['attributes']['class'][] = 'd-tiles-item';

  // Detect custom sizes in ALTs.
  $fd = $variables['item']->getFieldDefinition();
  if ($fd->id() == 'paragraph.d_p_tiles.field_d_image') {
    $alt = $variables['image']['#alt'];
    // In 1x1 just remove the text.
    if (strstr($alt, '1x1')) {
      $alt = trim(str_replace('1x1', '', $alt));
    }
    // In other sizes change classes and styles.
    if (strstr($alt, '2x2')) {
      $alt = trim(str_replace('2x2', '', $alt));
      $variables['image']['#style_name'] = 'tiles_thumbnail_2x2';
      $variables['attributes']['class'][] = 'd-tiles-item-2x2';
    }

    $variables['attributes']['title'] = $alt;
    $variables['attributes']['data-cbox-img-attrs'] = json_encode([ 'alt' => $alt ]);
  }
}
